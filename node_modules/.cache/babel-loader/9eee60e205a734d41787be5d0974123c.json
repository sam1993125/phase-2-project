{"ast":null,"code":"var _jsxFileName = \"/Users/yixin/Development/code/phase-2/phase-2-project/src/components/Database.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; // import SearchBar from \"./SearchBar\"\n\nimport NewContainer from \"./NewContainer\";\nimport SearchBar from \"./SearchBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Database(_ref) {\n  _s();\n\n  let {\n    handleClick\n  } = _ref;\n  const [newWorks, setNewWorks] = useState([]);\n  const [ids, setIds] = useState([]);\n  const [search, setSearch] = useState(\"s\");\n  let arr = []; //useEffect 2. when ids state gets updated, start fetching each individual id\n\n  useEffect(() => {\n    let arr = [];\n    ids.map(id => {\n      console.log(id);\n      fetch(`https://collectionapi.metmuseum.org/public/collection/v1/objects/${id}`).then(r => r.json()).then(id => {\n        // arr.push({\n        //     title: id.title,\n        //     image: id.primaryImageSmall,\n        //     date: id.objectDate,\n        //     artist: id.artistDisplayName,\n        //     medium:id.medium,\n        //     reference:id.objectURL\n        // })\n        let newArt = {\n          title: id.title,\n          image: id.primaryImageSmall,\n          date: id.objectDate,\n          artist: id.artistDisplayName,\n          medium: id.medium,\n          reference: id.objectURL\n        };\n        arr.push(newArt);\n      });\n    });\n    setNewWorks(arr);\n  }, []); //useEffect 1. gets ids when search term changes\n\n  useEffect(() => {\n    fetch(`https://collectionapi.metmuseum.org/public/collection/v1/search?isHighlight=true&q=${search}`).then(r => r.json()).then(data => {\n      // console.log('Data', data)\n      // let list = data.objectIDs.filter(entry => entry.created > 100).slice(0, 99);\n      let list = data.objectIDs.slice(0, 10); // console.log(list)\n      // setIds(list)\n      // do the search functionality right here\n\n      let artworks = list.map(async id => {\n        let req = await fetch(`https://collectionapi.metmuseum.org/public/collection/v1/objects/${id}`);\n        let res = await req.json();\n        let art = {\n          title: res.title,\n          image: res.primaryImageSmall,\n          date: res.objectDate,\n          artist: res.artistDisplayName,\n          medium: res.medium,\n          reference: res.objectURL\n        };\n        console.log('Work of art', art);\n        return art;\n      });\n      console.log('Art list', artworks);\n      setNewWorks(artworks);\n    });\n  } // eslint-disable-next-line react-hooks/exhaustive-deps\n  , [search]); // console.log(newWorks)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      searchTerm: search,\n      onSearchChange: setSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(NewContainer, {\n      newWorks: newWorks,\n      handleClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Database, \"j5tkG6LkHlCO5ySE+YZOjyKr+mo=\");\n\n_c = Database;\nexport default Database;\n\nvar _c;\n\n$RefreshReg$(_c, \"Database\");","map":{"version":3,"names":["React","useEffect","useState","NewContainer","SearchBar","Database","handleClick","newWorks","setNewWorks","ids","setIds","search","setSearch","arr","map","id","console","log","fetch","then","r","json","newArt","title","image","primaryImageSmall","date","objectDate","artist","artistDisplayName","medium","reference","objectURL","push","data","list","objectIDs","slice","artworks","req","res","art"],"sources":["/Users/yixin/Development/code/phase-2/phase-2-project/src/components/Database.js"],"sourcesContent":["import React, {useEffect,useState} from 'react'\n// import SearchBar from \"./SearchBar\"\nimport NewContainer from \"./NewContainer\"\nimport SearchBar from \"./SearchBar\"\n\n\nfunction Database({handleClick}) {\n\nconst [newWorks, setNewWorks] = useState([])\nconst [ids, setIds] = useState([])\nconst [search, setSearch] = useState(\"s\")\n\nlet arr =[]\n\n//useEffect 2. when ids state gets updated, start fetching each individual id\nuseEffect(() => {\n    let arr = []\n    ids.map((id) => {\n        console.log(id)\n        fetch(`https://collectionapi.metmuseum.org/public/collection/v1/objects/${id}`)\n        .then(r=> r.json())\n        .then ((id) => {\n            // arr.push({\n            //     title: id.title,\n            //     image: id.primaryImageSmall,\n            //     date: id.objectDate,\n            //     artist: id.artistDisplayName,\n            //     medium:id.medium,\n            //     reference:id.objectURL\n            // })\n            let newArt = {\n                title: id.title,\n                image: id.primaryImageSmall,\n                date: id.objectDate,\n                artist: id.artistDisplayName,\n                medium:id.medium,\n                reference:id.objectURL\n            }\n            arr.push(newArt)\n            \n        })\n        \n    })\n    setNewWorks(arr)\n}, [])\n//useEffect 1. gets ids when search term changes\nuseEffect(() => {\n        fetch(`https://collectionapi.metmuseum.org/public/collection/v1/search?isHighlight=true&q=${search}`)                                            \n            .then(r=> r.json())\n            .then((data) => {\n                // console.log('Data', data)\n                // let list = data.objectIDs.filter(entry => entry.created > 100).slice(0, 99);\n                let list = data.objectIDs.slice(0, 10)\n                // console.log(list)\n                // setIds(list)\n                // do the search functionality right here\n                let artworks = list.map(async (id) => {\n                    let req = await fetch(`https://collectionapi.metmuseum.org/public/collection/v1/objects/${id}`);\n                    let res = await req.json()\n                    let art = {\n                        title: res.title,\n                        image: res.primaryImageSmall,\n                        date: res.objectDate,\n                        artist: res.artistDisplayName,\n                        medium: res.medium,\n                        reference: res.objectURL\n                    }\n                    console.log('Work of art', art)\n                    return art\n                })\n                console.log('Art list', artworks)\n                setNewWorks(artworks)\n            })\n        } // eslint-disable-next-line react-hooks/exhaustive-deps\n,[search])\n\n\n// console.log(newWorks)\n\nreturn (\n    <div> \n    <SearchBar searchTerm={search} onSearchChange={setSearch}/>\n    <NewContainer newWorks={newWorks} handleClick={handleClick} />\n    </div>\n  )\n\n\n}\nexport default Database\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}